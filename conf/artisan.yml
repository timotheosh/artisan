---
builders:
  ec2:
    -
      type: amazon-ebs
      ami_name: "{{user `role`}}-ebs {{isotime | clean_ami_name}}"
      ena_support: true
      iam_instance_profile: default
      instance_type: "{{ user `instance_type` }}"
      region: us-east-1
      security_group_id: sg-cf66d3aa
      source_ami: "{{user `sourceami`}}"
      ssh_interface: private_ip
      ssh_timeout: 5m
      ssh_username: ec2-user
      subnet_id: subnet-21e7b967
      ami_block_device_mappings:
        -
          delete_on_termination: true
          device_name: /dev/sdo
          snapshot_id: snap-05088deb6848614fd
          volume_size: 8
          volume_type: standard
        -
          delete_on_termination: true
          device_name: /dev/sdp
          snapshot_id: snap-0bfa74ba21a29f0c5
          volume_size: 8
          volume_type: standard
      launch_block_device_mappings:
        -
          delete_on_termination: true
          device_name: /dev/xvda
          volume_size: 8
          volume_type: gp2
      run_tags:
        Name: "{{ user `role` }}-packer"
        role: "{{ user `role` }}-packer"
      tags:
        Name: "{{ user `role` }}"
        build: "{{ user `build` }}"
        build_number: "{{ user `build_number` }}"
        build_url: "{{ user `build_url` }}"
        owner: cloud-ops@corp.com
        role: "{{ user `role` }}"
        source_ami: "{{ user `sourceami` }}"
        source_commit_hash: "{{ user `source_commit_hash` }}"
        source_repo: "{{ user `source_repo` }}"
        forcefield_commit_hash: "{{ user `forcefield_commit_hash` }}"

  docker:
    -
      type: docker
      image: "{{ user `source_image` }}"
      commit: yes
      privileged: yes
      pull: yes

provisioners:
  ec2:
    -
      destination: /home/ec2-user/forcefield.tgz
      source: "{{ template_dir }}/../forcedield.tgz"
      type: file
    -
      destination: /home/ec2-user
      source: ./base
      type: file
    -
      destination: /home/ec2-user/base
      source: ./deploy
      type: file
    -
      inline:
        - "sudo easy_install pip"
        - "sudo pip install --upgrade pip virtualenv"
      type: shell
    -
      script: "{{ template_dir  }}/packer.sh"
      type: shell
    -
      playbook_dir: base
      playbook_file: base/install.yml
      type: ansible-local
    -
      inline:
        - "sudo /var/lib/inin/devops_finalize/finalize"
      type: shell
  docker:
    -
      inline:
        - "yum install -y shadow-utils pam less file which xz sudo python2-setuptools initscripts tar gzip curl unzip jq"
        - "mkdir -p /var/lib/cloud/scripts/per-boot"
        - "useradd -d /home/ec2-user -s /bin/bash -G wheel -U -m ec2-user"
        - "sudo easy_install pip"
        - "sudo pip install --upgrade pip virtualenv"
        - "curl -o /bin/systemctl https://raw.githubusercontent.com/gdraheim/docker-systemctl-replacement/master/files/docker/systemctl.py"
        - "chmod 0755 /bin/systemctl"
        - "mkdir /run/systemd/system"
      type: shell
    -
      destination: /home/ec2-user
      source: ./base
      type: file
    -
      destination: /home/ec2-user/base
      source: ./deploy
      type: file
    -
      script: "{{ template_dir  }}/packer.sh"
      type: shell
    -
      playbook_dir: base
      playbook_file: base/install.yml
      type: ansible-local
      extra_arguments:
        - "--extra-vars \"docker=true\""

post-processors:
  docker:
    -
      type: docker-tag
      repository: amzn2
      tag: 0.2

variables:
  docker:
    source_image: amazonlinux
    build_type: docker
  ec2:
    build: "{{ env `JOB_NAME` }}"
    build_number: "{{ env `BUILD_NUMBER` }}"
    build_url: "{{ env `BUILD_URL` }}"
    instance_type: c5.large
    role: basev2
    source_commit_hash: "{{ env `GIT_COMMIT` }}"
    source_repo: "{{ env `GIT_URL` }}"
    sourceami: ami-0f686c64c5fb9828c
    forcefield_commit_hash: "{{ env `FORCEFIELD_COMMIT_HASH` }}"
